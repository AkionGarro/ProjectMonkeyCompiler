token literal names:
null
'let'
'return'
'>'
'<'
'>='
'<='
'=='
'['
']'
'{'
'}'
'('
')'
null
null
null
'"'
'!='
'+'
'-'
'*'
'/'
'%'
'//'
'/*'
'*/'
null
'len'
'first'
'last'
'rest'
'push'
null
null
','
';'
'true'
'false'
'if'
'else'

token symbolic names:
null
LET
RETURN
GreaterT
LowerT
GreaterEQ
LowerEQ
Equeals
BLOCK_OPEN
BLOCK_CLOSE
BRACKET_OPEN
BRACKET_CLOSE
PAR_OPEN
PAR_CLOSE
LETTER
DIGIT
CHARIN
QUOTE
NotEqueals
Sum
Res
Mul
Div
Mod
DivEnt
Open
Close
Comment
Len
First
Last
Rest
Push
Boolean
WS
COMMA
SEMICOLON
TRUE
FALSE
IF
ELSE

rule names:
startRule
identifier
char


atn:
[4, 1, 40, 20, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 1, 0, 1, 0, 1, 1, 1, 1, 5, 1, 11, 8, 1, 10, 1, 12, 1, 14, 9, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 0, 0, 3, 0, 2, 4, 0, 1, 1, 0, 14, 15, 17, 0, 6, 1, 0, 0, 0, 2, 8, 1, 0, 0, 0, 4, 15, 1, 0, 0, 0, 6, 7, 3, 2, 1, 0, 7, 1, 1, 0, 0, 0, 8, 12, 5, 14, 0, 0, 9, 11, 7, 0, 0, 0, 10, 9, 1, 0, 0, 0, 11, 14, 1, 0, 0, 0, 12, 10, 1, 0, 0, 0, 12, 13, 1, 0, 0, 0, 13, 3, 1, 0, 0, 0, 14, 12, 1, 0, 0, 0, 15, 16, 5, 17, 0, 0, 16, 17, 5, 16, 0, 0, 17, 18, 5, 17, 0, 0, 18, 5, 1, 0, 0, 0, 1, 12]